
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    function isTeamMember(resource) {
      // Check if the user is in the teamMembers array (which is an array of objects)
      return request.auth.uid in resource.data.teamMembers.map(member => member.uid);
    }
    
    // Users can read their own profile, and other users can read public profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Any authenticated user can read/write opportunities.
    // This simplifies queries for explore, profile, and dashboard pages.
    match /opportunities/{opportunityId} {
      allow read, write: if request.auth != null;
      
      // Messages and files are restricted to team members and the owner.
      match /messages/{messageId} {
        allow read, create: if isOwner(get(/databases/$(database)/documents/opportunities/$(opportunityId))) || isTeamMember(get(/databases/$(database)/documents/opportunities/$(opportunityId)));
      }

      match /files/{fileId} {
         allow read, create: if isOwner(get(/databases/$(database)/documents/opportunities/$(opportunityId))) || isTeamMember(get(/databases/$(database)/documents/opportunities/$(opportunityId)));
      }
    }
  }
}
