rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Opportunities can be read by any authenticated user.
    // Creation, update, and deletion are restricted.
    match /opportunities/{opportunityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow delete: if false; // Deleting opportunities is disabled

      // Team members and the owner can access chat and files.
      match /messages/{messageId} {
        allow read, write: if request.auth != null && (resource.data.ownerId == request.auth.uid || get(/databases/$(database)/documents/opportunities/$(opportunityId)).data.teamMembers.hasAny([request.auth.uid]));
      }

      match /files/{fileId} {
        allow read, write: if request.auth != null && (resource.data.ownerId == request.auth.uid || get(/databases/$(database)/documents/opportunities/$(opportunityId)).data.teamMembers.hasAny([request.auth.uid]));
      }
    }
  }
}
